import { container } from 'tsyringe';
import { SERVER_NOTIFICATION_SERVICE } from '../domain/interface-adapters/gateways/server-notification-service';
import { ACCOUNT_REPOSITORY_INTERFACE } from '../domain/interface-adapters/repositories/account-repository';
import { BOOKING_REPOSITORY_INTERFACE } from '../domain/interface-adapters/repositories/booking-repository';
import { CUSTOMER_ADDRESS_REPOSITORY } from '../domain/interface-adapters/repositories/customer-address-repository';
import { CUSTOMER_REPOSITORY_INTERFACE } from '../domain/interface-adapters/repositories/customer-repository';
import { EMPLOYEE_DEFAULT_AVAILABILITY_REPOSITORY_INTERFACE } from '../domain/interface-adapters/repositories/employee-default-availability-repository';
import { EMPLOYEE_REPOSITORY_INTERFACE } from '../domain/interface-adapters/repositories/employee-repository';
import { FRAME_BOOKING_REPOSITORY_INTERFACE } from '../domain/interface-adapters/repositories/frame-booking-repository';
import { EMAIL_PROVIDER_INTERFACE } from '../domain/services/email-service';
import AccountRepository from '../repositories/account-respository';
import { BookingRepository } from '../repositories/booking-repository/booking-repository';
import customerAddressRepository from '../repositories/customer-address-repository';
import customerRepository from '../repositories/customer-repository';
import EmployeeDefaultAvailabilityRepository from '../repositories/employee-default-availability-repository';
import EmployeeRepository from '../repositories/employee-repository';
import FrameBookingRepository from '../repositories/frame-booking-repository';
import AWSSes from '../services/email-service/aws-ses';
import { AWSSNS } from '../services/server-notification-service';

container.register(EMPLOYEE_DEFAULT_AVAILABILITY_REPOSITORY_INTERFACE, { useClass: EmployeeDefaultAvailabilityRepository });
container.register(EMPLOYEE_REPOSITORY_INTERFACE, { useClass: EmployeeRepository });
container.register(BOOKING_REPOSITORY_INTERFACE, { useClass: BookingRepository });
container.register(FRAME_BOOKING_REPOSITORY_INTERFACE, { useClass: FrameBookingRepository });
container.register(ACCOUNT_REPOSITORY_INTERFACE, { useClass: AccountRepository });
container.register(CUSTOMER_ADDRESS_REPOSITORY, { useClass: customerAddressRepository });
container.register(CUSTOMER_REPOSITORY_INTERFACE, { useClass: customerRepository });
container.register(EMAIL_PROVIDER_INTERFACE, { useClass: AWSSes });
container.register(SERVER_NOTIFICATION_SERVICE, { useClass: AWSSNS });
